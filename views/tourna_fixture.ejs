<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        html, body, .brackets {
        width: 100%;
        min-height: 100%;
        font-family: "Arial", sans-serif;
    }
    .metroBtn {
        background-color: #2E7BCC;
        color: #fff;
        font-size: 1.1em;
        padding: 10px;
        display: inline-block;
        margin-bottom: 30px;
        cursor: pointer;
    }
    .brackets > div {
        vertical-align: top;
        clear: both;
    }
    .brackets > div > div {
        float: left;
        height: 100%;
    }
    .brackets > div > div > div {
        margin: 50px 0;
    }
    .brackets div.bracketbox {
        position: relative;
        width: 100%; height: 100%;
        border-top: 1px solid #555;
        border-right: 1px solid #555;
        border-bottom: 1px solid #555;
    }
    .brackets div.bracketbox > span {
        position: absolute;
        left: 40px;
        font-size: 0.85em;
    }
    /* .brackets div.bracketbox > span.info1 {
        position: absolute;
        top: -20px;
        left: 280px;
        font-size: 0.8em;
        color: #BBB;

     
    } */

    /* .brackets div.bracketbox > span.info2 {
        position: absolute;
        bottom: -20px;
        left: 280px;
        font-size: 0.8em;
        color: #BBB;
    } */
    .brackets div.bracketbox > span.teama {
        top: -13.5px;
        background-color: white;
        padding	: 5px 20px 5px 20px;
        border: 1px solid black;
    }
    .brackets div.bracketbox > span.teamb {
        bottom: -13.5px;
        background-color: white;
        padding	: 5px 20px 5px 20px;
        border: 1px solid black;
    }
    .brackets div.bracketbox > span.teamc {
        bottom: -13.5px;
        background-color: white;
        padding	: 5px 20px 5px 20px;
        border: 1px solid black;
    }
    .brackets > .group2 {
        height: 260px;
        width: 25%;
    }
    .brackets > .group4 {
        height: 260px;
        width: 75%;
    }
    .brackets > .group5 {
        height: 260px;
        width: 75%;
    }
    .brackets > .group2 > div {
        width: 49%;
    }
    .brackets > .group3 {
        height: 320px;
        width: 50%;
    }
    .brackets > .group3 > div {
        width: 32.7%;
    }
    .brackets > .group4 > div {
        width: 24.5%;
    }
    .brackets > .group5 > div {
        width: 19.6%;
    }
    .brackets > .group6 {
        height: 2000px;
    }
    .brackets > .group6 > div {
        width: 16.3%;
    }
    .brackets > .group7 > div {
        width: 13.3%;
    }
    .brackets > div > .r1 > div {
        height: 60px;
    }
    .brackets > div > .r2 > div {
        margin: 80px 0 110px 0;
        height: 110px;
    }
    .brackets > div > .r3 > div {
        margin: 135px 0 220px 0;
        height: 220px;
    }
    .brackets > div > .r4 > div {
        margin: 250px 0 445px 0;
        height: 445px;
    }
    .brackets > div > .r5 > div {
        margin: 460px 0 900px 0;
        height: 900px;
    }
    .brackets > div > .r6 > div {
        margin: 900px 0 0 0;
        height : 1800px;
    }
    .brackets > div > .r7 > div {
        margin: 1800px 0 0 0;
    }
    .brackets div.final > div.bracketbox {
        border-top: 0px;
        border-right: 0px;
        height: 0px;
    }
    .brackets > div > .r4 > div.drop {
        height: 180px;
        margin-bottom: 0px;
    }
    .brackets > div > .r5 > div.final.drop {
        margin-top: 345px;
        margin-bottom: 0px;
        height: 1px;
    }
    .brackets > div > div > div:last-of-type {
        margin-bottom: 0px;
    }
    #bracs{
        font-size: 0px;
    }


    @media only screen and (max-width:700px){
        .brackets div.bracketbox > span.teama {
            position: absolute;
            left: 30px;  
            top:-10px;
    }
    .brackets div.bracketbox > span.teamb {
        position: absolute;
        left: 30px;
        bottom: -20px;

    }

    .brackets div.bracketbox > span {
        position: absolute;
        border-radius: 10px;
        width: 100%;
    } 
     .brackets > .group6 > div {
        position: sticky;
    }

    .brackets > div > .r1 > div {
        position: relative;
        left: -30px;
        top: -5px;
    }

    .brackets > div > .r2 > div {
        position: relative;
        left: 25px;
        top:-5px;
    }
    .brackets > div > .r3 > div {
        position: relative;
        left: 48px;
    }
    .brackets > div > .r4 > div {
        position: relative;
        left: 65px;
    }
   
    .brackets > div > .r5 > div {
        position: relative;
        left: 80px;
        margin-left: 10px;
    }
    .brackets > div > .r6 > div {
        position: relative;
        left: 80px;
    }
    #tourney_id{
        font-size: 0px;
    }

}  
</style>
</head>
<body>
<div class="brackets" id="brackets"></div>
<div class="bracs" id="bracs"><%=no_of_bracs%></div>
<div class="tourney_id" id="tourney_id"><%=TOURNEY_ID%></div>>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/underscore@1.13.4/underscore-umd-min.js"></script>
<!-- <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/0.10.0/lodash.min.js"></script> -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script>
    	$(document).on('ready', function() {

var knownBrackets = [2,4,8,16,32,64], // brackets with "perfect" proportions (full fields, no byes)

    exampleTeams  = [] // because a bracket needs some teams!
    bracketCount = 0;console.log($(exampleTeams).length);
    for(let i=1;i<=64;i++){
        exampleTeams.push(`Spot ${i}`)
    }
/*
 * Build our bracket "model"
 */
var matchid = 1
function getBracket(base) {

    var closest 		= _.find(knownBrackets, function(k) { return k>=base; }),
        byes 			= closest-base;

    if(byes>0)	base = closest;

    var brackets 	= [],
        round 		= 1,
        baseT 		= base/2,
        baseC 		= base/2,
        teamMark	= 0,
        nextInc		= base/2;
    for(i=1;i<=(base-1);i++) {
        var	baseR = i/baseT,
            isBye = false;

        if(byes>0 && (i%2!=0 || byes>=(baseT-i))) {
            isBye = true;
            byes--;
        }

        var last = _.map(_.filter(brackets, function(b) { return b.nextGame == i; }), function(b) { return {game:b.bracketNo,teams:b.teamnames}; });
		//[last[0].teams[_.random(1)],last[1].teams[_.random(1)]]
		brackets.push({
            lastGames:	round==1 ? null : [last[0].game,last[1].game],
            nextGame:	nextInc+i>base-1?null:nextInc+i,
            teamnames:	round==1 ? [exampleTeams[teamMark],exampleTeams[teamMark+1]] : [`Match ${matchid-base}`,`Match ${matchid+1-base}`],
            bracketNo:	i,
            roundNo:	round,
            bye:		isBye
        });
		matchid += 2
        teamMark+=2;
        if(i%2!=0)	nextInc--;
        while(baseR>=1) {
            round++;
            baseC/= 2;
            baseT = baseT + baseC;
            baseR = i/baseT;
        }
    }

    renderBrackets(brackets);
}

/*
 * Inject our brackets
 */
function renderBrackets(struct) {
    var groupCount	= _.uniq(_.map(struct, function(s) { return s.roundNo; })).length;

    var group	= $('<div class="group'+(groupCount+1)+'" id="b'+bracketCount+'"></div>'),
        grouped = _.groupBy(struct, function(s) { return s.roundNo; });
    for(g=1;g<=groupCount;g++) {
        var round = $('<div class="r'+g+'"></div>');
        _.each(grouped[g], function(gg) {
            if(gg.bye)
                round.append('<div></div>');
            else
                round.append('<div><div class="bracketbox"><span class="info1">'+gg.bracketNo+'</span><span class="info2">'+gg.bracketNo+'</span><span class="teama">'+`<a href="https://ardentsportsapis.herokuapp.com/getScore?TOURNAMENT_ID=${$("#tourney_id").text()}&MATCHID=${gg.teamnames[0]}">`+gg.teamnames[0]+'</a></span><span class="teamb">'+`<a href="https://ardentsportsapis.herokuapp.com/getScore?TOURNAMENT_ID=${$("#tourney_id").text()}&MATCHID=${gg.teamnames[1]}">`+gg.teamnames[1]+'</a></span></div></div>');
        });
        group.append(round);
    }
    group.append('<div class="r'+(groupCount+1)+'"><div class="final"><div class="bracketbox"><span class="teamc">'+`<a href="https://ardentsportsapis.herokuapp.com/getScore?TOURNAMENT_ID=${$("#tourney_id").text()}&MATCHID=Match ${base/2 - 1}">`+_.last(struct).teamnames[_.random(1)]+'</a></span></div></div></div>');
    $('#brackets').append(group);

    bracketCount++;
    $('html,body').animate({
        scrollTop: $("#b"+(bracketCount-1)).offset().top
    });
}

$(window).on('load', function() {
    console.log('Hello')
    var opts = parseInt($('#bracs').text())
    if(!_.isNaN(opts) && opts <= _.last(knownBrackets))
        getBracket(opts);
    else
        alert('The bracket size you specified is not currently supported.');
        $('#clear').off('click');
        $('#clear').on('click',function(){
            $('#brackets').html("");
        });
});


});
</script>
</body>
</html>